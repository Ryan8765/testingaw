/**
    This is the main pipeline used for all React applications.

    successEmailAddress - email address to send to
    REPOSITORY_BRANCH - The branch of the current deployment (sent via webhook to Jenkins from beanstalk)
    AZURE_CRED_ID - Credential ID for Azure (stored in Jenkins securely)
    RES_GROUP - The resource group for the web app (obtained from Azure)
    WEB_APP - The name of the web app in Azure.
*/

def email = 'rmhaas221@gmail.com';
def s3Bucket = 'bogusoasistestqbtwo';
// def distId = 'E1Q83HI6WMP98A';

pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION="us-east-1"

    }

    stages{

        stage('Install Dependenciess') {
            steps {
                bat 'npm install'
            }
        }

        stage('Build the Project') {
            steps {
                bat 'npm run build'
            }
        }

        stage('Create/Update Cloudformation Template') {
            options {
                retry(2)
            }
            steps {
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID',credentialsId:'AWS-CREDS',secretKeyVariable:'AWS_SECRET_ACCESS_KEY')]) {
                    bat 'aws cloudformation deploy --template-file ./deploy/cloudformation.yml --stack-name ' + s3Bucket + ' --parameter-overrides BucketName=' + s3Bucket
                } 
            }
        }

        stage('Echo cloudformation template') {
            options {
                retry(2)
            }
            steps {
                script {
                    withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID',credentialsId:'AWS-CREDS',secretKeyVariable:'AWS_SECRET_ACCESS_KEY')]) {
                        env.DISTID = bat(script:'aws cloudformation describe-stacks \
                            --stack-name ' + s3Bucket + ' \
                            --query "Stacks[0].Outputs[?OutputKey==`CloudfrontDistribution`].OutputValue" \
                            --output text', returnStdout: true).trim().readLines().drop(1).join(" ")
                        //bat 'aws cloudformation describe-stacks --stack-name ' + s3Bucket
                    }
                }
                
            }
        }

        stage('Deploy to AWS Development') {
            // when {
            //     environment name: 'REPOSITORY_BRANCH', value: 'development'
            //     beforeAgent true
            // }

            options { 
                retry(3) 
            }


            steps {
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID',credentialsId:'AWS-CREDS',secretKeyVariable:'AWS_SECRET_ACCESS_KEY')]) {
                    bat 'aws s3 cp --recursive ./build s3://' + s3Bucket + '/'
                    //bat 'aws s3 cp --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://' + s3Bucket + '/'
                    bat 'aws s3 cp --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://' + s3Bucket + '/'
                    bat 'aws cloudfront create-invalidation --distribution-id ' + DISTID + ' --paths /*'
                }               
            }
        }

        //stage('Archive Production Deployments') {
        //}

    }

    post {
        always {
            //archiveArtifacts artifacts: "build/**/*.*", onlyIfSuccessful: true
            cleanWs()
        }

        //On Success - always send an email to the team involved.
        success {
            mail bcc: '', body: "<br><span style=\'font-size:20px; font-weight:bolder;\'>Successful Deployment</span><br><br><br>Jenkins Job Name: ${JOB_NAME} <br>Build Number: ${BUILD_NUMBER}", cc: '', charset: 'UTF-8', from: "rhaas@mcftech.com", mimeType: 'text/html', replyTo: '', subject: "Jenkins Successful Deployment ${JOB_NAME}", to: email;
        }

        failure {
            emailext attachLog: true, body: "There were some pipeline errors found.  Please see the logs below. Build URL: ${BUILD_URL}", subject: 'Pipeline Errors', to:email;

            emailext attachLog: true, body: "There were some pipeline errors found.  Please see the logs below. Build URL: ${BUILD_URL}", subject: 'Pipeline Errors', to:email;
        }

    }
}